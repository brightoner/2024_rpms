<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc 
  http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- @Controller, @RequestMapping 등 Spring MVC의 어노테이션 기반 프로그래밍 모델을 활성화 -->
  <annotation-driven />

  <!-- Controller scan -->
  <context:component-scan base-package="kr.go.rastech">
    <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
  </context:component-scan>

	<!-- 트랜젝션을 설정 -->
	<beans:import resource="../context/transaction-context.xml"/>


  <!-- Configures Handler Interceptors -->  
  <interceptors>
    <interceptor>
      <mapping path="/**/*"/>						<!-- 모든 경로에대해 LoginInterceptor 적용 -->
      <exclude-mapping path="/login/*"/>			<!-- LoginInterceptor 적용 제외 등록 -->
      <exclude-mapping path="/resources/**/*"/>
      <exclude-mapping path="/itemPicture/**/*"/>
      <exclude-mapping path="/streamPlayer/**/*"/>
      <exclude-mapping path="/data/**/*"/>   
      <exclude-mapping path="/error/*"/>
      <exclude-mapping path="/robots.txt"/>
      <beans:bean class="kr.go.rastech.commons.interceptors.LoginInterceptor">	
      </beans:bean>
       
    </interceptor>
  </interceptors>

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <!-- 정적 리소스 등록 -->
  <resources mapping="/resources/**" location="/resources/" />
  <resources mapping="/itemPicture/**" location="/itemPicture/" />
  <resources mapping="/streamPlayer/**" location="/streamPlayer/" />
  <resources mapping="/data/**" location="/data/" />
  <!-- SSO 처리를 위한 것 -->

  <!-- robots.txt -->
  <resources mapping="/robots.txt" location="/" />


  <!-- jsonView -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	<beans:bean id="bnViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />


  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
  <!-- .jsp 파일들을 /WEB-INF/views/ 경로에서 찾도록 설정 -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
    <beans:property name="order" value="2" />
  </beans:bean>

  <!-- Tiles viewResolver -->
 <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
  <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
  <beans:property name="order" value="1" />  
 </beans:bean>
 
 <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
  <beans:property name="definitions">
   <beans:list>
    <beans:value>/WEB-INF/config/tiles/tiles-defs.xml</beans:value>
   </beans:list>
  </beans:property>
 </beans:bean>

  <!-- Configure the multipart resolver -->
  <!-- 파일 업로드를 처리하기 위한 설정. 최대 업로드 크기와 인코딩 설정 -->
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <beans:property name="maxUploadSize" value="1073741824"/>
      <beans:property name="defaultEncoding" value="UTF-8"/>
  </beans:bean>

</beans:beans>
